package com.tcustodia.domain;

// Generated 18/07/2015 03:56:01 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Estacioncentral generated by hbm2java
 */
@Entity
@Table(name = "estacioncentral", schema = "public")
public class Estacioncentral implements java.io.Serializable {

	private long id;
	private Grupoalarma grupoalarma;
	private Protocolocomunicacion protocolocomunicacion;
	private Direccion direccion;
	private Persona persona;
	private String nroabonado;
	private String coaccion;
	private String comentarios;
	private String notatemporal;
	private Date notafechadesde;
	private Date notafechahasta;
	private Set<Informacionmedica> informacionmedicas = new HashSet<Informacionmedica>(
			0);
	private Set<Callerid> callerids = new HashSet<Callerid>(0);
	private Set<Particion> particions = new HashSet<Particion>(0);
	private Set<Contactos> contactoses = new HashSet<Contactos>(0);

	public Estacioncentral() {
	}

	public Estacioncentral(long id) {
		this.id = id;
	}

	public Estacioncentral(long id, Grupoalarma grupoalarma,
			Protocolocomunicacion protocolocomunicacion, Direccion direccion,
			Persona persona, String nroabonado, String coaccion,
			String comentarios, String notatemporal, Date notafechadesde,
			Date notafechahasta, Set<Informacionmedica> informacionmedicas,
			Set<Callerid> callerids, Set<Particion> particions,
			Set<Contactos> contactoses) {
		this.id = id;
		this.grupoalarma = grupoalarma;
		this.protocolocomunicacion = protocolocomunicacion;
		this.direccion = direccion;
		this.persona = persona;
		this.nroabonado = nroabonado;
		this.coaccion = coaccion;
		this.comentarios = comentarios;
		this.notatemporal = notatemporal;
		this.notafechadesde = notafechadesde;
		this.notafechahasta = notafechahasta;
		this.informacionmedicas = informacionmedicas;
		this.callerids = callerids;
		this.particions = particions;
		this.contactoses = contactoses;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idgrupoalarma")
	public Grupoalarma getGrupoalarma() {
		return this.grupoalarma;
	}

	public void setGrupoalarma(Grupoalarma grupoalarma) {
		this.grupoalarma = grupoalarma;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idprotocolocomunicacion")
	public Protocolocomunicacion getProtocolocomunicacion() {
		return this.protocolocomunicacion;
	}

	public void setProtocolocomunicacion(
			Protocolocomunicacion protocolocomunicacion) {
		this.protocolocomunicacion = protocolocomunicacion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "iddireccion")
	public Direccion getDireccion() {
		return this.direccion;
	}

	public void setDireccion(Direccion direccion) {
		this.direccion = direccion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idpersona")
	public Persona getPersona() {
		return this.persona;
	}

	public void setPersona(Persona persona) {
		this.persona = persona;
	}

	@Column(name = "nroabonado", length = 5)
	public String getNroabonado() {
		return this.nroabonado;
	}

	public void setNroabonado(String nroabonado) {
		this.nroabonado = nroabonado;
	}

	@Column(name = "coaccion", length = 20)
	public String getCoaccion() {
		return this.coaccion;
	}

	public void setCoaccion(String coaccion) {
		this.coaccion = coaccion;
	}

	@Column(name = "comentarios", length = 300)
	public String getComentarios() {
		return this.comentarios;
	}

	public void setComentarios(String comentarios) {
		this.comentarios = comentarios;
	}

	@Column(name = "notatemporal", length = 300)
	public String getNotatemporal() {
		return this.notatemporal;
	}

	public void setNotatemporal(String notatemporal) {
		this.notatemporal = notatemporal;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "notafechadesde", length = 13)
	public Date getNotafechadesde() {
		return this.notafechadesde;
	}

	public void setNotafechadesde(Date notafechadesde) {
		this.notafechadesde = notafechadesde;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "notafechahasta", length = 13)
	public Date getNotafechahasta() {
		return this.notafechahasta;
	}

	public void setNotafechahasta(Date notafechahasta) {
		this.notafechahasta = notafechahasta;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "estacioncentral")
	public Set<Informacionmedica> getInformacionmedicas() {
		return this.informacionmedicas;
	}

	public void setInformacionmedicas(Set<Informacionmedica> informacionmedicas) {
		this.informacionmedicas = informacionmedicas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "estacioncentral")
	public Set<Callerid> getCallerids() {
		return this.callerids;
	}

	public void setCallerids(Set<Callerid> callerids) {
		this.callerids = callerids;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "estacioncentral")
	public Set<Particion> getParticions() {
		return this.particions;
	}

	public void setParticions(Set<Particion> particions) {
		this.particions = particions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "estacioncentral")
	public Set<Contactos> getContactoses() {
		return this.contactoses;
	}

	public void setContactoses(Set<Contactos> contactoses) {
		this.contactoses = contactoses;
	}

}
